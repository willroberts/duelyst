// The following files access `this` before calling `super()`,
// which is allowed in CoffeeScript but not in JavaScript.
const filesWithInvalidConstructors = [
  'app/common/session2',
  'app/sdk/actions/activateSignatureCardAction',
  'app/sdk/actions/applyCardToBoardAction',
  'app/sdk/actions/applyExhaustionAction',
  'app/sdk/actions/applyModifierAction',
  'app/sdk/actions/attackAction',
  'app/sdk/actions/bonusManaAction',
  'app/sdk/actions/bonusManaCoreAction',
  'app/sdk/actions/burnCardAction',
  'app/sdk/actions/cloneEntityAction',
  'app/sdk/actions/cloneEntityAsTransformAction',
  'app/sdk/actions/damageAction',
  'app/sdk/actions/damageAsAttackAction',
  'app/sdk/actions/dieAction',
  'app/sdk/actions/drawCardAction',
  'app/sdk/actions/drawStartingHandAction',
  'app/sdk/actions/drawToXCardsAction',
  'app/sdk/actions/endFollowupAction',
  'app/sdk/actions/endTurnAction',
  'app/sdk/actions/fightAction',
  'app/sdk/actions/forcedAttackAction',
  'app/sdk/actions/generateSignatureCardAction',
  'app/sdk/actions/healAction',
  'app/sdk/actions/hurtingDamageAction',
  'app/sdk/actions/killAction',
  'app/sdk/actions/moveAction',
  'app/sdk/actions/playCardAction',
  'app/sdk/actions/playCardAsTransformAction',
  'app/sdk/actions/playCardFromHandAction',
  'app/sdk/actions/playCardSilentlyAction',
  'app/sdk/actions/playSignatureCardAction',
  'app/sdk/actions/putCardInDeckAction',
  'app/sdk/actions/putCardInHandAction',
  'app/sdk/actions/randomDamageAction',
  'app/sdk/actions/randomPlayCardSilentlyAction',
  'app/sdk/actions/randomTeleportAction',
  'app/sdk/actions/refreshArtifactChargesAction',
  'app/sdk/actions/refreshExhaustionAction',
  'app/sdk/actions/removeAction',
  'app/sdk/actions/removeArtifactsAction',
  'app/sdk/actions/removeCardFromDeckAction',
  'app/sdk/actions/removeCardFromHandAction',
  'app/sdk/actions/removeManaCoreAction',
  'app/sdk/actions/removeModifierAction',
  'app/sdk/actions/removeRandomArtifactAction',
  'app/sdk/actions/replaceCardFromHandAction',
  'app/sdk/actions/resignAction',
  'app/sdk/actions/restoreChargeToAllArtifactsAction',
  'app/sdk/actions/restoreManaAction',
  'app/sdk/actions/revealHiddenCardAction',
  'app/sdk/actions/rollbackToSnapshotAction',
  'app/sdk/actions/setDamageAction',
  'app/sdk/actions/setExhaustionAction',
  'app/sdk/actions/startTurnAction',
  'app/sdk/actions/stopBufferingEventsAction',
  'app/sdk/actions/swapGeneralAction',
  'app/sdk/actions/swapUnitAllegianceAction',
  'app/sdk/actions/swapUnitsAction',
  'app/sdk/actions/takeAnotherTurnAction',
  'app/sdk/actions/teleportAction',
  'app/sdk/actions/teleportBehindUnitAction',
  'app/sdk/actions/teleportInFrontOfUnitAction',
  'app/sdk/actions/trueDamageAction',
  'app/sdk/actions/updateSignatureCardAction',
  'app/sdk/gameSession',
  'app/sdk/modifiers/modifierDoubleAttackStat',
  'app/sdk/modifiers/modifierDoubleHealthStat',
  'app/sdk/quests/questBeginnerCompleteSoloChallenges',
  'app/sdk/quests/questBeginnerFactionLevel',
  'app/sdk/quests/questBeginnerPlayOneQuickMatch',
  'app/sdk/quests/questBeginnerPlayPracticeGames',
  'app/sdk/quests/questBeginnerWinFourPracticeGames',
  'app/sdk/quests/questBeginnerWinOneSeasonGame',
  'app/sdk/quests/questBeginnerWinPracticeGames',
  'app/sdk/quests/questBeginnerWinThreeQuickMatches',
  'app/sdk/quests/questBeginnerWinThreeRankedMatches',
  'app/sdk/quests/questBeginnerWinTwoPracticeGames',
  'app/sdk/quests/questParticipationWithFaction',
  'app/sdk/quests/questWinWithFaction',
  'cli/analytics_cli',
  'cli/config',
  'cli/crm',
  'scripts/aws-utility/list-steal-time-servers',
  'scripts/aws-utility/turn-off-unused-maintenance-servers',
  'server/lib/custom_errors'
];

// Skip files with invalid constructor issues when decaffeinating.
const invalidConstructorFilter = function (path) {
  // Assumes '/duelyst/' only occurs in the path one time.
  const shortPath = path.split('/duelyst/')[1];
  if (filesWithInvalidConstructors.includes(shortPath)) {
    return false;
  }
  return true;
}

module.exports = {
  decaffeinateArgs: [
    '--disallow-invalid-constructors',
    '--keep-commonjs'
  ],
  jscodeshiftScripts: ['remove-coffee-from-imports.js'],
  fileFilterFn: invalidConstructorFilter
}
